apiVersion: v1
# give access to certain type of object types, each API version defines a different set of 'objects' we can use
kind: Service
# kind is use to represent the type of object that we want to create, type : Pod or Service
#Objects serve different purposes - objects can be used to run a container, monitoring a container, setting up networking, etc
metadata:
  name: client-node-port
spec:
  type: NodePort
    #service object type have only 4 subtypes: 
      #ClusterIP
      #NodePort : exposes a container to the outside world (only good for dev purposes, not used in production environemnt)
      #LoadBalancer
      #Ingress
  ports:
    - port: 3050
      # used if other pods within the cluster needs to connect to any port that is mapped to targetPort: 3000
      targetPort: 3000
      # needs to be identical to whatever object that it wants to send traffic to, e.g. traffic is being sent to client-pod through the port 3000 on the client port
      nodePort: 31515
      # the port number that will be entered into the browser for communication to the NodePort service, which will then decide where to route traffic to
      # nodePort will be a number between 30000 - 32767, if not specified, the number will be randomly assigned
  selector:
    component: web
    #can also use other terms --> tier: frontend, but this must be matches to the label of other object that it must connect to

